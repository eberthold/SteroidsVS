<ResourceDictionary 
    x:Class="Steroids.CodeStructure.Themes.generic"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
    xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
    xmlns:platformUI="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:controls="clr-namespace:Steroids.CodeStructure.Controls"
    mc:Ignorable="d" >

    <Style TargetType="{x:Type controls:IndicatorButton}" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Background" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.FileTabProvisionalSelectedInactiveBrushKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.FileTabProvisionalSelectedInactiveForegroundBrushKey}}" />
        <Setter Property="TextElement.FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:IndicatorButton}">
                    <Border x:Name="root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1">
                        <ContentControl x:Name="content" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="root" Property="Background" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.FileTabProvisionalHoverBrushKey}}" />
                            <Setter TargetName="content" Property="TextElement.Foreground" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.FileTabProvisionalHoverForegroundBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="root" Property="Background" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.FileTabProvisionalSelectedActiveBrushKey}}" />
                            <Setter TargetName="content" Property="TextElement.Foreground" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.FileTabProvisionalSelectedActiveForegroundBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:FloatingDiagnosticHint}">
        <Setter Property="Padding" Value="1" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:FloatingDiagnosticHint}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            
                            <imaging:CrispImage x:Name="PART_Moniker" Opacity="0.75" Margin="{TemplateBinding Padding}" Moniker="{x:Static catalog:KnownMonikers.StatusWarning}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" RenderTransformOrigin="0, 0.5">
                                <imaging:CrispImage.RenderTransform>
                                    <ScaleTransform ScaleX="{TemplateBinding ScaleFactor}" ScaleY="{TemplateBinding ScaleFactor}" />
                                </imaging:CrispImage.RenderTransform>
                            </imaging:CrispImage>
                            
                            <TextBlock Margin="10, 0, 4, 0" Grid.Column="2" Foreground="Gray" TextTrimming="CharacterEllipsis" HorizontalAlignment="Right" RenderTransformOrigin="1, 0.5" Opacity="0.8" >
                                <TextBlock.RenderTransform>
                                    <ScaleTransform ScaleX="{TemplateBinding ScaleFactor}" ScaleY="{TemplateBinding ScaleFactor}" />
                                </TextBlock.RenderTransform>
                                <Run Text="{TemplateBinding Code}" /><Run Text=":" />
                                <Run Text="{TemplateBinding Message}" />
                            </TextBlock>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Info -->
                        <Trigger Property="Severity" Value="1">
                            <Setter TargetName="PART_Moniker" Property="Moniker" Value="{x:Static catalog:KnownMonikers.StatusInformation}" />
                        </Trigger>
                        <!-- Warning -->
                        <Trigger Property="Severity" Value="2">
                            <Setter TargetName="PART_Moniker" Property="Moniker" Value="{x:Static catalog:KnownMonikers.StatusWarning}" />
                        </Trigger>
                        <!-- Error -->
                        <Trigger Property="Severity" Value="3">
                            <Setter TargetName="PART_Moniker" Property="Moniker" Value="{x:Static catalog:KnownMonikers.StatusError}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

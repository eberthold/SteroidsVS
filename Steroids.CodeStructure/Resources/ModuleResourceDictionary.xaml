<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
    xmlns:theming="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Imaging"
    xmlns:platformUI="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:ui="clr-namespace:Steroids.CodeStructure.UI"
    mc:Ignorable="d" 
    x:Class="Steroids.CodeStructure.Resources.ModuleResourceDictionary">

    <ui:LevelToThicknessConverter x:Key="LevelToThicknessConverter" BaseOffset="2"/>

    <SolidColorBrush x:Key="ClickableItemContainerHighlightBrush" Color="#44444444" />

    <Style x:Key="MouseOverControl" TargetType="ContentControl">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" HorizontalAlignment="Stretch" />
                    </Border>
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ClickableItemContainerHighlightBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderButton" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent">
                        <Polygon x:Name="PART_Glyph" Points="0,0 4,4 0,8" Margin="0, 0, 4, 0" Stroke="{StaticResource ToolWindowTextBrush}" StrokeThickness="1" Fill="Transparent" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="PART_Glyph" Property="Stroke" Value="{DynamicResource {x:Static vsUi:EnvironmentColors.FileTabSelectedGradientTopBrushKey}}" />-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Glyph" Property="Fill" Value="{StaticResource ToolWindowTextBrush}" />
                            <Setter TargetName="PART_Glyph" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="45" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <!--<Setter TargetName="PART_Glyph" Property="Stroke" Value="{DynamicResource {x:Static vsUi:EnvironmentColors.FileTabSelectedGradientTopBrushKey}}" />
                            <Setter TargetName="PART_Glyph" Property="Fill" Value="{DynamicResource {x:Static vsUi:EnvironmentColors.FileTabSelectedGradientTopBrushKey}}" />-->
                            <Setter TargetName="PART_Glyph" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="45" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MonikerCheckBox" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{TemplateBinding Content}" Margin="2" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarSelectedBorderBrushKey}}" />
                            <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarSelectedBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.CommandBarMouseOverBackgroundGradientBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpandableControl" TargetType="ContentControl">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <StackPanel Orientation="Horizontal">
                            <!--<ToggleButton Style="{StaticResource ExpanderButton}" />-->
                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" HorizontalAlignment="Stretch" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="Bd" Property="Background" Value="{StaticResource ClickableItemContainerHighlightBrush}" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContentPresenter}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="CodeStructureTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:EnvironmentColors.ToolWindowTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="CodeStructureListViewItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
        <Setter Property="MinHeight" Value="24" />
        <!-- avoids jumping virtualizing list in combination with template selector -->
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <DataTemplate DataType="{x:Type ui:CodeStructureViewModel}">
        <ui:CodeStructureView IsPinned="{Binding IsPinned, Mode=TwoWay}" IsOpen="{Binding IsOpen, Mode=TwoWay}" SelectedNodeContainer="{Binding SelectedNode, Mode=OneWayToSource}" SpaceReservation="{Binding SpaceReservation, Mode=OneTime}"/>
    </DataTemplate>

    <DataTemplate x:Key="NodeContainerTemplate">
        <ContentControl Style="{StaticResource MouseOverControl}" Focusable="False" Padding="{Binding IndentLevel, Converter={StaticResource LevelToThicknessConverter}}" theming:ImageThemingUtilities.ImageBackgroundColor="{Binding Background, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}">
            <StackPanel Orientation="Horizontal" Margin="0, 2">
                <imaging:CrispImage Width="16" Height="16" Moniker="{Binding Moniker}" Margin="0, 0, 6, 0" />
                <TextBlock Text="{Binding Name}" Foreground="{DynamicResource {x:Static platformUI:EnvironmentColors.ToolWindowTextBrushKey}}" VerticalAlignment="Center" Style="{StaticResource CodeStructureTextBlock}" />
            </StackPanel>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="SectionHeaderTemplate">
        <ContentControl Style="{StaticResource ExpandableControl}" Focusable="False" Padding="{Binding IndentLevel, Converter={StaticResource LevelToThicknessConverter}}" theming:ImageThemingUtilities.ImageBackgroundColor="{Binding Background, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}">
            <StackPanel Orientation="Horizontal" Margin="0, 2">
                <imaging:CrispImage Width="16" Height="16" Moniker="{Binding Moniker}" Margin="0, 0, 6, 0" />
                <TextBlock Text="{Binding Name}" Foreground="{DynamicResource {x:Static platformUI:EnvironmentColors.ToolWindowTextBrushKey}}" VerticalAlignment="Center" Style="{StaticResource CodeStructureTextBlock}" />
            </StackPanel>
        </ContentControl>
    </DataTemplate>

    <ui:NodeContainerTemplateSelector x:Key="NodeContainerTemplateSelector" SectionHeaderTemplate="{StaticResource SectionHeaderTemplate}" NodeContainerTemplate="{StaticResource NodeContainerTemplate}" />
</ResourceDictionary>
